name: accountEd-backend

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - "infrastructure/**"

  workflow_dispatch:

permissions:
  packages: write
  contents: read
  id-token: write

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    steps:
        -
          name: Checkout
          uses: actions/checkout@v2.4.2
        -
          name: Cache Go Modules
          uses: actions/cache@v3
          with:
            path: |
              ~/.cache/go-build
              ~/go/pkg/mod
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: |
              ${{ runner.os }}-go-
        -
          name: Cache Docker Layers
          uses: actions/cache@v3
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-  
        -
          name: Configure AWS credentials
          if: ${{ github.event_name != 'pull_request' }}
          uses: aws-actions/configure-aws-credentials@v1
          with:
            role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
            aws-region: ${{ secrets.AWS_REGION }}
            role-duration-seconds: 900
        -
          name: Login to Amazon ECR
          if: github.event_name != 'pull_request'
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
        -
          name: Login to GHCR
          if: ${{ github.event_name != 'pull_request' }}
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        -
          name: Build, tag, and push docker image to Amazon ECR
          if: github.event_name != 'pull_request'
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: dev-sch00l.io-core
            ENV: dev
            GH_ACTOR: ${{ github.actor }}
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            IMAGE_TAG: ${{ github.sha }}
          run: |
            make ci-buildx-register-container
        - 
          name: fetch current task definition
          run: aws ecs describe-task-definition --task-definition $${{ env.ECS_TASK_DEFINITION }} --query taskDefinition > task-definition.json
        -
          name: render task definition
          id: render-task-definition
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: "task-definition.json"
            container-name: $${{ env.CONTAINER_NAME }}
            image: $${{ format('{0}/{1}:{2}', steps.login-ecr.outputs.registry, env.ECR_REPOSITORY, github.sha) }}
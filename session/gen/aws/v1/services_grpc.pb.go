// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: aws/v1/services.proto

package awsv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	AWSResourceClientService_GetAWSSessionCredentials_FullMethodName = "/proto.aws.v1.AWSResourceClientService/GetAWSSessionCredentials"
)

// AWSResourceClientServiceClient is the client API for AWSResourceClientService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AWSResourceClientServiceClient interface {
	GetAWSSessionCredentials(ctx context.Context, in *AWSConfigRequest, opts ...grpc.CallOption) (*AWSConfigResponse, error)
}

type aWSResourceClientServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAWSResourceClientServiceClient(cc grpc.ClientConnInterface) AWSResourceClientServiceClient {
	return &aWSResourceClientServiceClient{cc}
}

func (c *aWSResourceClientServiceClient) GetAWSSessionCredentials(ctx context.Context, in *AWSConfigRequest, opts ...grpc.CallOption) (*AWSConfigResponse, error) {
	out := new(AWSConfigResponse)
	err := c.cc.Invoke(ctx, AWSResourceClientService_GetAWSSessionCredentials_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AWSResourceClientServiceServer is the server API for AWSResourceClientService service.
// All implementations should embed UnimplementedAWSResourceClientServiceServer
// for forward compatibility
type AWSResourceClientServiceServer interface {
	GetAWSSessionCredentials(context.Context, *AWSConfigRequest) (*AWSConfigResponse, error)
}

// UnimplementedAWSResourceClientServiceServer should be embedded to have forward compatible implementations.
type UnimplementedAWSResourceClientServiceServer struct {
}

func (UnimplementedAWSResourceClientServiceServer) GetAWSSessionCredentials(context.Context, *AWSConfigRequest) (*AWSConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAWSSessionCredentials not implemented")
}

// UnsafeAWSResourceClientServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AWSResourceClientServiceServer will
// result in compilation errors.
type UnsafeAWSResourceClientServiceServer interface {
	mustEmbedUnimplementedAWSResourceClientServiceServer()
}

func RegisterAWSResourceClientServiceServer(s grpc.ServiceRegistrar, srv AWSResourceClientServiceServer) {
	s.RegisterService(&AWSResourceClientService_ServiceDesc, srv)
}

func _AWSResourceClientService_GetAWSSessionCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AWSConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AWSResourceClientServiceServer).GetAWSSessionCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AWSResourceClientService_GetAWSSessionCredentials_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AWSResourceClientServiceServer).GetAWSSessionCredentials(ctx, req.(*AWSConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AWSResourceClientService_ServiceDesc is the grpc.ServiceDesc for AWSResourceClientService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AWSResourceClientService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.aws.v1.AWSResourceClientService",
	HandlerType: (*AWSResourceClientServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAWSSessionCredentials",
			Handler:    _AWSResourceClientService_GetAWSSessionCredentials_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aws/v1/services.proto",
}
